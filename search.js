window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"turbo_broccoli": {"fullname": "turbo_broccoli", "modulename": "turbo_broccoli", "kind": "module", "doc": "<h1 id=\"turbo-broccoli\">Turbo Broccoli \ud83e\udd66</h1>\n\n<p><a href=\"https://pypi.org/project/turbo-broccoli/\"><img src=\"https://img.shields.io/pypi/v/turbo-broccoli\" alt=\"PyPI\" /></a>\n<img src=\"https://img.shields.io/github/license/altaris/turbo-broccoli\" alt=\"License\" />\n<a href=\"https://pypi.org/project/black\"><img src=\"https://img.shields.io/badge/style-black-black\" alt=\"Code\nstyle\" /></a>\n<img src=\"https://img.shields.io/badge/project%20name%20by-github-pink\" alt=\"hehe\" />\n<a href=\"https://https://altaris.github.io/turbo-broccoli/turbo_broccoli.html\"><img src=\"https://badgen.net/badge/documentation/here/green\" alt=\"Documentation\" /></a></p>\n\n<p>JSON (de)serialization extensions, originally aimed at <code>numpy</code> and <code>tensorflow</code>\nobjects.</p>\n\n<h1 id=\"installation\">Installation</h1>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>turbo-broccoli\n</code></pre>\n</div>\n\n<h1 id=\"usage\">Usage</h1>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">turbo_broccoli</span> <span class=\"k\">as</span> <span class=\"nn\">tb</span>\n\n<span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;an_array&quot;</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"s2\">&quot;float32&quot;</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n<span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">TurboBroccoliEncoder</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>produces the following string (modulo indentation):</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"nt\">&quot;an_array&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;__numpy__&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"nt\">&quot;__type__&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;ndarray&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">      </span><span class=\"nt\">&quot;__version__&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span>\n<span class=\"w\">      </span><span class=\"nt\">&quot;data&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;__bytes__&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">          </span><span class=\"nt\">&quot;__version__&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"w\">          </span><span class=\"nt\">&quot;data&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;PAAAAA...&quot;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">      </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<p>For deserialization, simply use</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">json_string</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">TurboBroccoliDecoder</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"supported-types\">Supported types</h2>\n\n<ul>\n<li><p><code>bytes</code></p></li>\n<li><p><code>collections.deque</code>, <code>collections.namedtuple</code></p></li>\n<li><p>Dataclasses. Serialization is straightforward:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">C</span><span class=\"p\">:</span>\n  <span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n  <span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">({</span><span class=\"s2\">&quot;c&quot;</span><span class=\"p\">:</span> <span class=\"n\">C</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"s2\">&quot;Hello&quot;</span><span class=\"p\">)},</span> <span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">TurboBroccoliEncoder</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>For deserialization, first register the class:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">register_dataclass_type</span><span class=\"p\">(</span><span class=\"n\">C</span><span class=\"p\">)</span>\n<span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">TurboBroccoliDecoder</span><span class=\"p\">)</span>\n</code></pre>\n</div></li>\n<li><p>_Generic object_, <strong>serialization only</strong>. A generic object is an object that\nhas the <code>__turbo_broccoli__</code> attribute. This attribute is expected to be a\nlist of attributes whose values will be serialized. For example,</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">C</span><span class=\"p\">:</span>\n  <span class=\"n\">__turbo_broccoli__</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">]</span>\n  <span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n  <span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">C</span><span class=\"p\">()</span>\n<span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">42</span><span class=\"p\">,</span> <span class=\"mi\">43</span>\n<span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">TurboBroccoliEncoder</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>produces the following string (modulo indentation):</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"nt\">&quot;__generic__&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;__version__&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;data&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"nt\">&quot;a&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">42</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<p>Registered attributes can of course have any type supported by Turbo\nBroccoli, such as numpy arrays. Registered attributes can be <code>@property</code>\nmethods.</p></li>\n<li><p><a href=\"https://keras.io/api/models/model/\"><code>keras.Model</code></a>; standard subclasses of\n<a href=\"https://keras.io/api/layers/\"><code>keras.layers.Layer</code></a>,\n<a href=\"https://keras.io/api/losses/\"><code>keras.losses.Loss</code></a>,\n<a href=\"https://keras.io/api/metrics/\"><code>keras.metrics.Metric</code></a>, and\n<a href=\"https://keras.io/api/optimizers/\"><code>keras.optimizers.Optimizer</code></a></p></li>\n<li><p><code>numpy.number</code>, <code>numpy.ndarray</code> with numerical dtype</p></li>\n<li><p><code>pandas.DataFrame</code> and <code>pandas.Series</code>, but with the following limitations:</p>\n\n<ol>\n<li>the following dtypes are not supported: <code>complex</code>, <code>object</code>, <code>timedelta</code></li>\n<li><p>the column / series names must be strings and not numbers. The following\nis not acceptable:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n</code></pre>\n</div>\n\n<p>because</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nb\">print</span><span class=\"p\">([</span><span class=\"n\">c</span> <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">])</span>\n<span class=\"c1\"># [0, 1]</span>\n<span class=\"nb\">print</span><span class=\"p\">([</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">])</span>\n<span class=\"c1\"># [int, int]</span>\n</code></pre>\n</div></li>\n</ol></li>\n<li><p><code>tensorflow.Tensor</code> with numerical dtype, but not <code>tensorflow.RaggedTensor</code></p></li>\n<li><p><code>torch.Tensor</code>, <strong>WARNING</strong>: loaded tensors are automatically placed on the\nCPU and gradients are lost; <code>torch.nn.Module</code>, don't forget to register your\nmodule type using\n<a href=\"(https://altaris.github.io/turbo-broccoli/turbo_broccoli/environment.html#register_pytorch_module_type)\"><code>turbo_broccoli.register_pytorch_module_type</code></a>:\n <div class=\"pdoc-code codehilite\">\n <pre><span></span><code><span class=\"c1\"># Serialization</span>\n <span class=\"k\">class</span> <span class=\"nc\">MyModule</span><span class=\"p\">(</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n \n <span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">MyModule</span><span class=\"p\">()</span>  <span class=\"c1\"># Must be instantiable without arguments</span>\n <span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">TurboBroccoliEncoder</span><span class=\"p\">)</span>\n \n <span class=\"c1\"># Deserialization</span>\n <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">register_pytorch_module_type</span><span class=\"p\">(</span><span class=\"n\">MyModule</span><span class=\"p\">)</span>\n <span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">TurboBroccoliDecoder</span><span class=\"p\">)</span>\n </code></pre>\n </div></p>\n\n<p><strong>WARNING</strong>: It is not possible to register and deserialize <a href=\"https://pytorch.org/docs/stable/nn.html#containers\">standard pytorch\nmodule containers</a>\ndirectly. Wrap them in your own custom module class.</p></li>\n</ul>\n\n<h2 id=\"secrets\">Secrets</h2>\n\n<p>Basic Python types can be wrapped in their corresponding secret type according\nto the following table</p>\n\n<table>\n<thead>\n<tr>\n  <th>Python type</th>\n  <th>Secret type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>dict</code></td>\n  <td><code>turbo_broccoli.secret.SecretDict</code></td>\n</tr>\n<tr>\n  <td><code>float</code></td>\n  <td><code>turbo_broccoli.secret.SecretFloat</code></td>\n</tr>\n<tr>\n  <td><code>int</code></td>\n  <td><code>turbo_broccoli.secret.SecretInt</code></td>\n</tr>\n<tr>\n  <td><code>list</code></td>\n  <td><code>turbo_broccoli.secret.SecretList</code></td>\n</tr>\n<tr>\n  <td><code>str</code></td>\n  <td><code>turbo_broccoli.secret.SecretStr</code></td>\n</tr>\n</tbody>\n</table>\n\n<p>The secret value can be recovered with the <code>get_secret_value</code> method. At\nserialization, the this value will be encrypted. For example,</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># See https://pynacl.readthedocs.io/en/latest/secret/#key</span>\n<span class=\"kn\">import</span> <span class=\"nn\">nacl.secret</span>\n<span class=\"kn\">import</span> <span class=\"nn\">nacl.utils</span>\n\n<span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">nacl</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"n\">nacl</span><span class=\"o\">.</span><span class=\"n\">secret</span><span class=\"o\">.</span><span class=\"n\">SecretBox</span><span class=\"o\">.</span><span class=\"n\">KEY_SIZE</span><span class=\"p\">)</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">turbo_broccoli.secret</span> <span class=\"kn\">import</span> <span class=\"n\">SecretStr</span>\n<span class=\"kn\">from</span> <span class=\"nn\">turbo_broccoli.environment</span> <span class=\"kn\">import</span> <span class=\"n\">set_shared_key</span>\n\n<span class=\"n\">set_shared_key</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;user&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;alice&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;password&quot;</span><span class=\"p\">:</span> <span class=\"n\">SecretStr</span><span class=\"p\">(</span><span class=\"s2\">&quot;dolphin&quot;</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n<span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">TurboBroccoliEncoder</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>produces the following string (modulo indentation and modulo the encrypted\ncontent):</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"nt\">&quot;user&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;alice&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"nt\">&quot;password&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;__secret__&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"nt\">&quot;__version__&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"w\">      </span><span class=\"nt\">&quot;data&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;__bytes__&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">          </span><span class=\"nt\">&quot;__version__&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"w\">          </span><span class=\"nt\">&quot;data&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;qPSsruu...&quot;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">      </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<p>Deserialization decrypts the secrets, but they stay wrapped inside the secret\ntypes above. If the wrong key is provided, an exception is raised. If no key is\nprovided, the secret values are replaced by a\n<code>turbo_broccoli.secret.LockedSecret</code>. Internally, Turbo Broccoli uses\n<a href=\"https://pynacl.readthedocs.io/en/latest/\"><code>pynacl</code></a>'s\n<a href=\"https://pynacl.readthedocs.io/en/latest/secret/#nacl.secret.SecretBox\"><code>SecretBox</code></a>.\n<strong>WARNING</strong>: In the case of <code>SecretDict</code> and <code>SecretList</code>, the values contained\nwithin must be JSON-serializable <strong>without</strong> Turbo Broccoli. See also the\n<code>TB_SHARED_KEY</code> environment variable below.</p>\n\n<h2 id=\"environment-variables\">Environment variables</h2>\n\n<p>Some behaviors of Turbo Broccoli can be tweaked by setting specific environment\nvariables. If you want to modify these parameters programatically, do not do so\nby modifying <code>os.environ</code>. Rather, use the methods of\n<code>turbo_broccoli.environment</code>.</p>\n\n<ul>\n<li><p><code>TB_ARTIFACT_PATH</code> (default: <code>./</code>; see also\n<a href=\"(https://altaris.github.io/turbo-broccoli/turbo_broccoli/environment.html#set_artifact_path)\"><code>turbo_broccoli.set_artifact_path</code></a>,\n<a href=\"(https://altaris.github.io/turbo-broccoli/turbo_broccoli/environment.html#get_artifact_path)\"><code>turbo_broccoli.environment.get_artifact_path</code></a>):\nDuring serialization, Turbo Broccoli may create artifacts to which the JSON\nobject will point to. The artifacts will be stored in <code>TB_ARTIFACT_PATH</code>. For\nexample, if <code>arr</code> is a big numpy array,</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;an_array&quot;</span><span class=\"p\">:</span> <span class=\"n\">arr</span><span class=\"p\">}</span>\n<span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">TurboBroccoliEncoder</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>will generate the following string (modulo indentation and id)</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;an_array&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;__numpy__&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;__type__&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;ndarray&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;__version__&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;id&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;70692d08-c4cf-4231-b3f0-0969ea552d5a&quot;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<p>and a <code>70692d08-c4cf-4231-b3f0-0969ea552d5a</code> file has been created in\n<code>TB_ARTIFACT_PATH</code>.</p></li>\n<li><p><code>TB_KERAS_FORMAT</code> (default: <code>tf</code>, valid values are <code>json</code>, <code>h5</code>, and <code>tf</code>;\nsee also\n<a href=\"https://altaris.github.io/turbo-broccoli/turbo_broccoli/environment.html#set_keras_format\"><code>turbo_broccoli.set_keras_format</code></a>,\n<a href=\"https://altaris.github.io/turbo-broccoli/turbo_broccoli/environment.html#get_keras_format\"><code>turbo_broccoli.environment.get_keras_format</code></a>):\nThe serialization format for keras models. If <code>h5</code> or <code>tf</code> is used, an\nartifact following said format will be created in <code>TB_ARTIFACT_PATH</code>. If\n<code>json</code> is used, the model will be contained in the JSON document (anthough\nthe weights may be in artifacts if they are too large).</p></li>\n<li><p><code>TB_MAX_NBYTES</code> (default: <code>8000</code>, see also\n<a href=\"https://altaris.github.io/turbo-broccoli/turbo_broccoli/environment.html#set_max_nbytes\"><code>turbo_broccoli.set_max_nbytes</code></a>,\n<a href=\"https://altaris.github.io/turbo-broccoli/turbo_broccoli/environment.html#get_max_nbytes\"><code>turbo_broccoli.environment.get_max_nbytes</code></a>):\nThe maximum byte size of an numpy array or pandas object beyond which\nserialization will produce an artifact instead of storing it in the JSON\ndocument. This does not limit the size of the overall JSON document though.\n8000 bytes should be enough for a numpy array of 1000 <code>float64</code>s to be stored\nin-document.</p></li>\n<li><p><code>TB_NODECODE</code> (default: empty; see also\n<a href=\"https://altaris.github.io/turbo-broccoli/turbo_broccoli/environment.html#set_nodecode\"><code>turbo_broccoli.set_nodecode</code></a>,\n<a href=\"https://altaris.github.io/turbo-broccoli/turbo_broccoli/environment.html#is_nodecode\"><code>turbo_broccoli.environment.is_nodecode</code></a>):\nComma-separated list of types to not deserialize, for example\n<code>bytes,numpy.ndarray</code>. Excludable types are:</p>\n\n<ul>\n<li><code>bytes</code>,</li>\n<li><code>dataclass.&lt;dataclass_name&gt;</code> (case sensitive),</li>\n<li><code>collections.deque</code>, <code>collections.namedtuple</code>,</li>\n<li><code>keras.model</code>, <code>keras.layer</code>, <code>keras.loss</code>, <code>keras.metric</code>,\n<code>keras.optimizer</code>,</li>\n<li><code>numpy.ndarray</code>, <code>numpy.number</code>,</li>\n<li><code>pandas.dataframe</code>, <code>pandas.series</code>, <strong>WARNING: excluding\n<code>pandas.dataframe</code> will crash any deserialization of <code>pandas.series</code></strong></li>\n<li><code>tensorflow.sparse_tensor</code>, <code>tensorflow.tensor</code>, <code>tensorflow.variable</code>.\n<strong>WARNING</strong>: excluding <code>numpy.ndarray</code> will may crash deserialization of\nTensorflow and Pandas types.</li>\n</ul></li>\n<li><p><code>TB_SHARED_KEY</code> (default: empty; see also\n<a href=\"https://altaris.github.io/turbo-broccoli/turbo_broccoli/environment.html#set_shared_key\"><code>turbo_broccoli.set_shared_key</code></a>,\n<a href=\"https://altaris.github.io/turbo-broccoli/turbo_broccoli/environment.html#get_shared_key\"><code>turbo_broccoli.environment.get_shared_key</code></a>):\nSecret key used to encrypt secrets. The encryption uses <a href=\"https://pynacl.readthedocs.io/en/latest/secret/#nacl.secret.SecretBox\"><code>pynacl</code>'s\n<code>SecretBox</code></a>.\nAn exception is raised when attempting to serialize a secret type while no\nkey is set.</p></li>\n</ul>\n\n<h1 id=\"contributing\">Contributing</h1>\n\n<h2 id=\"dependencies\">Dependencies</h2>\n\n<ul>\n<li><code>python3.9</code> or newer;</li>\n<li><code>requirements.txt</code> for runtime dependencies;</li>\n<li><code>requirements.dev.txt</code> for development dependencies.</li>\n<li><code>make</code> (optional);</li>\n</ul>\n\n<p>Simply run</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>virtualenv<span class=\"w\"> </span>venv<span class=\"w\"> </span>-p<span class=\"w\"> </span>python3.9\n.<span class=\"w\"> </span>./venv/bin/activate\npip<span class=\"w\"> </span>install<span class=\"w\"> </span>--upgrade<span class=\"w\"> </span>pip\npip<span class=\"w\"> </span>install<span class=\"w\"> </span>-r<span class=\"w\"> </span>requirements.txt\npip<span class=\"w\"> </span>install<span class=\"w\"> </span>-r<span class=\"w\"> </span>requirements.dev.txt\n</code></pre>\n</div>\n\n<h2 id=\"documentation\">Documentation</h2>\n\n<p>Simply run</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>make<span class=\"w\"> </span>docs\n</code></pre>\n</div>\n\n<p>This will generate the HTML doc of the project, and the index file should be at\n<code>docs/index.html</code>. To have it directly in your browser, run</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>make<span class=\"w\"> </span>docs-browser\n</code></pre>\n</div>\n\n<h2 id=\"code-quality\">Code quality</h2>\n\n<p>Don't forget to run</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>make\n</code></pre>\n</div>\n\n<p>to format the code following <a href=\"https://pypi.org/project/black/\">black</a>,\ntypecheck it using <a href=\"http://mypy-lang.org/\">mypy</a>, and check it against coding\nstandards using <a href=\"https://pylint.org/\">pylint</a>.</p>\n\n<h2 id=\"unit-tests\">Unit tests</h2>\n\n<p>Run</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>make<span class=\"w\"> </span><span class=\"nb\">test</span>\n</code></pre>\n</div>\n\n<p>to have <a href=\"https://docs.pytest.org/\">pytest</a> run the unit tests in <code>tests/</code>.</p>\n\n<h1 id=\"credits\">Credits</h1>\n\n<p>This project takes inspiration from\n<a href=\"https://github.com/Crimson-Crow/json-numpy\">Crimson-Crow/json-numpy</a>.</p>\n\n<h1 id=\"changelog\">Changelog</h1>\n\n<h1 id=\"v200\"><code>v2.0.0</code></h1>\n\n<ul>\n<li><code>turbo-broccoli</code> now uses <a href=\"https://huggingface.co/docs/safetensors/index\">Huggingface's\n<code>safetensors</code></a> to store\n<code>np.ndarray</code> and <code>tf.Tensor</code>.</li>\n<li>Added support for <code>torch.Tensor</code>, also serialized using <code>safetensors</code>.</li>\n</ul>\n"}, "turbo_broccoli.bytes": {"fullname": "turbo_broccoli.bytes", "modulename": "turbo_broccoli.bytes", "kind": "module", "doc": "<p>bytes (de)serialization utilities.</p>\n"}, "turbo_broccoli.bytes.from_json": {"fullname": "turbo_broccoli.bytes.from_json", "modulename": "turbo_broccoli.bytes", "qualname": "from_json", "kind": "function", "doc": "<p>Deserializes a dict into a bytes object. See <code>to_json</code> for the\nspecification <code>dct</code> is expected to follow. In particular, note that <code>dct</code>\nmust contain the key <code>__bytes__</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dct</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.bytes.to_json": {"fullname": "turbo_broccoli.bytes.to_json", "modulename": "turbo_broccoli.bytes", "qualname": "to_json", "kind": "function", "doc": "<p>Serializes a Python <code>bytes</code> object into JSON using a base 64 + ASCII scheme.</p>\n\n<p>The return dict has the following structure</p>\n\n<pre><code>{\n    \"__bytes__\": {\n        \"__version__\": 1,\n        \"data\": &lt;str&gt;,\n    },\n}\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.collections": {"fullname": "turbo_broccoli.collections", "modulename": "turbo_broccoli.collections", "kind": "module", "doc": "<p>Python standard collections (de)serialization</p>\n"}, "turbo_broccoli.collections.from_json": {"fullname": "turbo_broccoli.collections.from_json", "modulename": "turbo_broccoli.collections", "qualname": "from_json", "kind": "function", "doc": "<p>Deserializes a dict into a Python collection. See <code>to_json</code> for the\nspecification <code>dct</code> is expected to follow. In particular, note that <code>dct</code>\nmust contain the key <code>__collections__</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dct</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.collections.to_json": {"fullname": "turbo_broccoli.collections.to_json", "modulename": "turbo_broccoli.collections", "qualname": "to_json", "kind": "function", "doc": "<p>Serializes a Python collection into JSON by cases. See the README for the\nprecise list of supported types.</p>\n\n<p>The return dict has the following structure</p>\n\n<pre><code>{\n    \"__collections__\": {...},\n}\n</code></pre>\n\n<p>where the <code>{...}</code> dict contains the actual data, and whose structure\ndepends on the precise type of <code>obj</code>.</p>\n\n<ul>\n<li><p><code>collections.deque</code>:</p>\n\n<p>{\n    \"__collections__\": {\n        \"__type__\": \"deque,\n        \"__version__\": 1,\n        \"data\": [...],\n        \"maxlen\": <int or None>,\n    }\n}</p></li>\n<li><p><code>collections.namedtuple</code></p>\n\n<p>{\n    \"__collections__\": {\n        \"__type__\": \"namedtuple,\n        \"__version__\": 1,\n        \"class\": <str>,\n        \"data\": {...},\n    }\n}</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.dataclass": {"fullname": "turbo_broccoli.dataclass", "modulename": "turbo_broccoli.dataclass", "kind": "module", "doc": "<p>Dataclass serialization</p>\n"}, "turbo_broccoli.dataclass.from_json": {"fullname": "turbo_broccoli.dataclass.from_json", "modulename": "turbo_broccoli.dataclass", "qualname": "from_json", "kind": "function", "doc": "<p>Deserializes a dict into a dataclass object. See <code>to_json</code> for the\nspecification <code>dct</code> is expected to follow, and\n<code>turbo_broccoli.environment.register_dataclass_type</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dct</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.dataclass.to_json": {"fullname": "turbo_broccoli.dataclass.to_json", "modulename": "turbo_broccoli.dataclass", "qualname": "to_json", "kind": "function", "doc": "<p>Serializes a dataclass into JSON by cases. The return dict has the\nfollowing structure</p>\n\n<pre><code>{\n    \"__dataclass__\": {\n        \"__version__\": 2,\n        \"class\": &lt;str&gt;,\n        \"data\": {...},\n    },\n}\n</code></pre>\n\n<p>where the <code>{...}</code> is <code>obj.__dict__</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.environment": {"fullname": "turbo_broccoli.environment", "modulename": "turbo_broccoli.environment", "kind": "module", "doc": "<p>Environment variable and settings management. See the\n<a href=\"https://cedric.hothanh.fr/turbo-broccoli/turbo_broccoli.html#environment-variables\">README</a>\nfor information about the supported environment variables.</p>\n"}, "turbo_broccoli.environment.get_artifact_path": {"fullname": "turbo_broccoli.environment.get_artifact_path", "modulename": "turbo_broccoli.environment", "qualname": "get_artifact_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.environment.get_keras_format": {"fullname": "turbo_broccoli.environment.get_keras_format", "modulename": "turbo_broccoli.environment", "qualname": "get_keras_format", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.environment.get_pandas_format": {"fullname": "turbo_broccoli.environment.get_pandas_format", "modulename": "turbo_broccoli.environment", "qualname": "get_pandas_format", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.environment.get_max_nbytes": {"fullname": "turbo_broccoli.environment.get_max_nbytes", "modulename": "turbo_broccoli.environment", "qualname": "get_max_nbytes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.environment.get_registered_dataclass_type": {"fullname": "turbo_broccoli.environment.get_registered_dataclass_type", "modulename": "turbo_broccoli.environment", "qualname": "get_registered_dataclass_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">type</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.environment.get_registered_pytorch_module_type": {"fullname": "turbo_broccoli.environment.get_registered_pytorch_module_type", "modulename": "turbo_broccoli.environment", "qualname": "get_registered_pytorch_module_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">type</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.environment.get_shared_key": {"fullname": "turbo_broccoli.environment.get_shared_key", "modulename": "turbo_broccoli.environment", "qualname": "get_shared_key", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.environment.is_nodecode": {"fullname": "turbo_broccoli.environment.is_nodecode", "modulename": "turbo_broccoli.environment", "qualname": "is_nodecode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">type_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.environment.register_dataclass_type": {"fullname": "turbo_broccoli.environment.register_dataclass_type", "modulename": "turbo_broccoli.environment", "qualname": "register_dataclass_type", "kind": "function", "doc": "<p>Registers a dataclass for dataclass deserialization. Registered types may\nbe overwritten.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span><span class=\"p\">:</span> <span class=\"nb\">type</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "turbo_broccoli.environment.register_pytorch_module_type": {"fullname": "turbo_broccoli.environment.register_pytorch_module_type", "modulename": "turbo_broccoli.environment", "qualname": "register_pytorch_module_type", "kind": "function", "doc": "<p>Registers a <code>torch.nn.Module</code> type for module deserialization. Registered\ntypes may be overwritten.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span><span class=\"p\">:</span> <span class=\"nb\">type</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "turbo_broccoli.environment.set_artifact_path": {"fullname": "turbo_broccoli.environment.set_artifact_path", "modulename": "turbo_broccoli.environment", "qualname": "set_artifact_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "turbo_broccoli.environment.set_keras_format": {"fullname": "turbo_broccoli.environment.set_keras_format", "modulename": "turbo_broccoli.environment", "qualname": "set_keras_format", "kind": "function", "doc": "<p>Valid format are <code>h5</code>, <code>json</code>, and <code>tf</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fmt</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "turbo_broccoli.environment.set_max_nbytes": {"fullname": "turbo_broccoli.environment.set_max_nbytes", "modulename": "turbo_broccoli.environment", "qualname": "set_max_nbytes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nbytes</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "turbo_broccoli.environment.set_nodecode": {"fullname": "turbo_broccoli.environment.set_nodecode", "modulename": "turbo_broccoli.environment", "qualname": "set_nodecode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">types</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "turbo_broccoli.environment.set_pandas_format": {"fullname": "turbo_broccoli.environment.set_pandas_format", "modulename": "turbo_broccoli.environment", "qualname": "set_pandas_format", "kind": "function", "doc": "<p>Valid formats are <code>csv</code>, <code>excel</code>, <code>feather</code>, <code>h5</code>, <code>hdf</code>, <code>html</code>, <code>pickle</code>,\n<code>sql</code>, <code>stata</code>, and <code>xml</code>.</p>\n\n<p>TODO: Write all the unit tests.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fmt</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "turbo_broccoli.environment.set_shared_key": {"fullname": "turbo_broccoli.environment.set_shared_key", "modulename": "turbo_broccoli.environment", "qualname": "set_shared_key", "kind": "function", "doc": "<p>If the provided key is a string, it will be encoded in <code>utf-8</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "turbo_broccoli.generic": {"fullname": "turbo_broccoli.generic", "modulename": "turbo_broccoli.generic", "kind": "module", "doc": "<p>Serialization of so-called generic object. See\n<code>turbo_broccoli.generic.to_json</code>.</p>\n"}, "turbo_broccoli.generic.to_json": {"fullname": "turbo_broccoli.generic.to_json", "modulename": "turbo_broccoli.generic", "qualname": "to_json", "kind": "function", "doc": "<p>Serializes a generic object into JSON by cases.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.keras": {"fullname": "turbo_broccoli.keras", "modulename": "turbo_broccoli.keras", "kind": "module", "doc": "<p>keras (de)serialization utilities.</p>\n"}, "turbo_broccoli.keras.from_json": {"fullname": "turbo_broccoli.keras.from_json", "modulename": "turbo_broccoli.keras", "qualname": "from_json", "kind": "function", "doc": "<p>Deserializes a dict into a Keras object. See <code>to_json</code> for the\nspecification <code>dct</code> is expected to follow. In particular, note that <code>dct</code>\nmust contain the key <code>__keras__</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dct</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.keras.to_json": {"fullname": "turbo_broccoli.keras.to_json", "modulename": "turbo_broccoli.keras", "qualname": "to_json", "kind": "function", "doc": "<p>Serializes a tensorflow object into JSON by cases. See the README for the\nprecise list of supported types.</p>\n\n<p>The return dict has the following structure</p>\n\n<pre><code>{\n    \"__keras__\": {...},\n}\n</code></pre>\n\n<p>where the <code>{...}</code> dict contains the actual data, and whose structure\ndepends on the precise type of <code>obj</code>. Most keras object will simply be\nserialized using <code>keras.utils.serialize_keras_object</code>. Here are the exceptions:</p>\n\n<ul>\n<li><p><code>keras.Model</code> (the model must have weights). If <code>TB_KERAS_FORMAT</code> is\n<code>json</code>, the document will look like</p>\n\n<pre><code>{\n    \"__keras__\": {\n        \"__type__\": \"model\",\n        \"__version__\": 2,\n        \"loss\": {...} or null,\n        \"metrics\": [...],\n        \"model\": {...},\n        \"optimizer\": {...} or null,\n        \"weights\": [...],\n    },\n}\n</code></pre>\n\n<p>if <code>TB_KERAS_FORMAT</code> is <code>h5</code> or <code>tf</code>, the document will look like</p>\n\n<pre><code>{\n    \"__keras__\": {\n        \"__type__\": \"model\",\n        \"__version__\": 2,\n        \"format\": &lt;str&gt;,\n        \"id\": &lt;UUID4 str&gt;\n    }\n}\n</code></pre></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.numpy": {"fullname": "turbo_broccoli.numpy", "modulename": "turbo_broccoli.numpy", "kind": "module", "doc": "<p>numpy (de)serialization utilities.</p>\n\n<h6 id=\"todo\">Todo:</h6>\n\n<blockquote>\n  <p>Handle numpy's <code>generic</code> type (which supersedes the <code>number</code> type).</p>\n</blockquote>\n"}, "turbo_broccoli.numpy.from_json": {"fullname": "turbo_broccoli.numpy.from_json", "modulename": "turbo_broccoli.numpy", "qualname": "from_json", "kind": "function", "doc": "<p>Deserializes a dict into a numpy object. See <code>to_json</code> for the\nspecification <code>dct</code> is expected to follow. In particular, note that <code>dct</code>\nmust contain the key <code>__numpy__</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dct</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.numpy.to_json": {"fullname": "turbo_broccoli.numpy.to_json", "modulename": "turbo_broccoli.numpy", "qualname": "to_json", "kind": "function", "doc": "<p>Serializes a <code>numpy</code> object into JSON by cases. See the README for the\nprecise list of supported types.</p>\n\n<p>The return dict has the following structure</p>\n\n<pre><code>{\n    \"__numpy__\": {...},\n}\n</code></pre>\n\n<p>where the <code>{...}</code> dict contains the actual data, and whose structure\ndepends on the precise type of <code>obj</code>.</p>\n\n<ul>\n<li><p><code>numpy.ndarray</code>: An array is processed differently depending on its size\nand on the <code>TB_MAX_NBYTES</code> environment variable. If the array is\nsmall, i.e. <code>arr.nbytes &lt;= TB_MAX_NBYTES</code>, then it is directly\nstored in the resulting JSON document as</p>\n\n<pre><code>{\n    \"__numpy__\": {\n        \"__type__\": \"ndarray\",\n        \"__version__\": 2,\n        \"data\": &lt;ASCII encoded byte string&gt;,\n        \"dtype\": &lt;str&gt;,\n        \"shape\": &lt;int tuple&gt;,\n    }\n}\n</code></pre>\n\n<p>or, if the <code>safetensors</code> package is available:</p>\n\n<pre><code>{\n    \"__numpy__\": {\n        \"__type__\": \"ndarray\",\n        \"__version__\": 3,\n        \"data\": &lt;ASCII encoded byte string&gt;,\n    }\n}\n</code></pre>\n\n<p>On the other hand, the array is too large (i.e. the number of bytes\nexceeds <code>TB_MAX_NBYTES</code> or the value set by\n<code>turbo_broccoli.environment.set_max_nbytes</code>), then the content of <code>arr</code>\nis stored in an <code>.npy</code> file. Said file is saved to the path specified by\nthe <code>TB_ARTIFACT_PATH</code> environment variable with a\nrandom UUID4 as filename. The resulting JSON document looks like</p>\n\n<pre><code>{\n    \"__numpy__\": {\n        \"__type__\": \"ndarray\",\n        \"__version__\": &lt;2 or 3&gt;,\n        \"id\": &lt;UUID4 str&gt;,\n    }\n}\n</code></pre>\n\n<p>By default, <code>TB_MAX_NBYTES</code> is <code>8000</code> bytes, which should be enough\nto store an array of 1000 <code>float64</code>s, and <code>TB_ARTIFACT_PATH</code> is <code>./</code>.\n<code>TB_ARTIFACT_PATH</code> must point to an existing directory.</p></li>\n<li><p><code>numpy.number</code>:</p>\n\n<pre><code>{\n    \"__numpy__\": {\n        \"__type__\": \"number\",\n        \"__version__\": 1,\n        \"value\": &lt;float&gt;,\n        \"dtype\": &lt;str&gt;,\n    }\n}\n</code></pre></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.pandas": {"fullname": "turbo_broccoli.pandas", "modulename": "turbo_broccoli.pandas", "kind": "module", "doc": "<p>pandas (de)serialization utilities.</p>\n"}, "turbo_broccoli.pandas.from_json": {"fullname": "turbo_broccoli.pandas.from_json", "modulename": "turbo_broccoli.pandas", "qualname": "from_json", "kind": "function", "doc": "<p>Deserializes a dict into a pandas object. See <code>to_json</code> for the\nspecification <code>dct</code> is expected to follow. In particular, note that <code>dct</code>\nmust contain the key <code>__pandas__</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dct</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.pandas.to_json": {"fullname": "turbo_broccoli.pandas.to_json", "modulename": "turbo_broccoli.pandas", "qualname": "to_json", "kind": "function", "doc": "<p>Serializes a pandas object into JSON by cases. See the README for the\nprecise list of supported types.</p>\n\n<p>The return dict has the following structure</p>\n\n<pre><code>{\n    \"__pandas__\": {...},\n}\n</code></pre>\n\n<p>where the <code>{...}</code> dict contains the actual data, and whose structure\ndepends on the precise type of <code>obj</code>.</p>\n\n<ul>\n<li><p><code>pandas.DataFrame</code>: A dataframe is processed differently depending on its\nsize and on the <code>TB_MAX_NBYTES</code> environment variable. If the dataframe is\nsmall, i.e. at most <code>TB_MAX_NBYTES</code> bytes, then it is directly stored in\nthe resulting JSON document as</p>\n\n<pre><code>{\n    \"__pandas__\": {\n        \"__type__\": \"dataframe\",\n        \"__version__\": 1,\n        \"data\": {...},\n        \"dtypes\": [\n            [col1, dtype1],\n            [col2, dtype2],\n            ...\n        ],\n    }\n}\n</code></pre>\n\n<p>where <code>{...}</code> is the result of <code>pandas.DataFrame.to_json</code> (in <code>dict</code>\nform). On the other hand, the dataframe is too but, then its content is\nstored in an artifact, whose format follows the <code>TB_PANDAS_FORMAT</code>\nenvironment (HDF5 by default). Said file is saved to the\npath specified by the <code>TB_ARTIFACT_PATH</code> environment variable with a\nrandom UUID4 as filename. The resulting JSON document looks like</p>\n\n<pre><code>{\n    \"__pandas__\": {\n        \"__type__\": \"dataframe\",\n        \"__version__\": 1,\n        \"dtypes\": [\n            [col1, dtype1],\n            [col2, dtype2],\n            ...\n        ],\n        \"id\": &lt;UUID4 str&gt;,\n        \"format\": &lt;str&gt;\n    }\n}\n</code></pre></li>\n<li><p><code>pandas.Series</code>: A series will be converted to a dataframe before being\nserialized. The final document will look like this</p>\n\n<pre><code>{\n    \"__pandas__\": {\n        \"__type__\": \"series\",\n        \"__version__\": 1,\n        \"data\": {...},\n        \"name\": &lt;str&gt;,\n    }\n}\n</code></pre>\n\n<p>where <code>{...}</code> is the document of the dataframe'd series. So for example</p>\n\n<pre><code>{\n    \"__pandas__\": {\n        \"__type__\": \"series\",\n        \"__version__\": 1,\n        \"data\": {\n            \"__type__\": \"dataframe\",\n            \"__version__\": 1,\n            \"id\": &lt;UUID4 str&gt;,\n            \"format\": &lt;str&gt;,\n        },\n        \"name\": &lt;str&gt;,\n    }\n}\n</code></pre>\n\n<p>if the series is large.</p></li>\n</ul>\n\n<h6 id=\"warning\">Warning:</h6>\n\n<blockquote>\n  <p>Series and column names must be strings!</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.pytorch": {"fullname": "turbo_broccoli.pytorch", "modulename": "turbo_broccoli.pytorch", "kind": "module", "doc": "<p>Pytorch (de)serialization utilities.</p>\n"}, "turbo_broccoli.pytorch.from_json": {"fullname": "turbo_broccoli.pytorch.from_json", "modulename": "turbo_broccoli.pytorch", "qualname": "from_json", "kind": "function", "doc": "<p>Deserializes a dict into a <code>pytorch</code> object. See <code>to_json</code> for the\nspecification <code>dct</code> is expected to follow. In particular, note that <code>dct</code>\nmust contain the key <code>__pytorch__</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dct</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.pytorch.to_json": {"fullname": "turbo_broccoli.pytorch.to_json", "modulename": "turbo_broccoli.pytorch", "qualname": "to_json", "kind": "function", "doc": "<p>Serializes a tensor into JSON by cases. See the README for the precise list\nof supported types.</p>\n\n<p>The return dict has the following structure</p>\n\n<pre><code>{\n    \"__pytorch__\": {...},\n}\n</code></pre>\n\n<p>where the <code>{...}</code> dict contains the actual data, and whose structure\ndepends on the precise type of <code>obj</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.secret": {"fullname": "turbo_broccoli.secret", "modulename": "turbo_broccoli.secret", "kind": "module", "doc": "<p>Serialize secrets</p>\n"}, "turbo_broccoli.secret.Secret": {"fullname": "turbo_broccoli.secret.Secret", "modulename": "turbo_broccoli.secret", "qualname": "Secret", "kind": "class", "doc": "<p>A wrapper for a basic Python variable whose value is considered to be\nsecret. Similar API as <a href=\"https://pydantic-docs.helpmanual.io/usage/types/#secret-types\"><code>pydantic</code>'s secret\ntypes</a></p>\n"}, "turbo_broccoli.secret.Secret.__init__": {"fullname": "turbo_broccoli.secret.Secret.__init__", "modulename": "turbo_broccoli.secret", "qualname": "Secret.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "turbo_broccoli.secret.Secret.get_secret_value": {"fullname": "turbo_broccoli.secret.Secret.get_secret_value", "modulename": "turbo_broccoli.secret", "qualname": "Secret.get_secret_value", "kind": "function", "doc": "<p>Self-explanatory</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.secret.LockedSecret": {"fullname": "turbo_broccoli.secret.LockedSecret", "modulename": "turbo_broccoli.secret", "qualname": "LockedSecret", "kind": "class", "doc": "<p>Represented a secret that could not be decrypted because the shared key was\nnot provided. The <code>get_secret_value</code> method always raises a <code>RuntimeError</code>.</p>\n", "bases": "Secret"}, "turbo_broccoli.secret.LockedSecret.get_secret_value": {"fullname": "turbo_broccoli.secret.LockedSecret.get_secret_value", "modulename": "turbo_broccoli.secret", "qualname": "LockedSecret.get_secret_value", "kind": "function", "doc": "<p>Self-explanatory</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">NoReturn</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.secret.SecretDict": {"fullname": "turbo_broccoli.secret.SecretDict", "modulename": "turbo_broccoli.secret", "qualname": "SecretDict", "kind": "class", "doc": "<p>A wrapper for a basic Python variable whose value is considered to be\nsecret. Similar API as <a href=\"https://pydantic-docs.helpmanual.io/usage/types/#secret-types\"><code>pydantic</code>'s secret\ntypes</a></p>\n", "bases": "Secret"}, "turbo_broccoli.secret.SecretDict.__init__": {"fullname": "turbo_broccoli.secret.SecretDict.__init__", "modulename": "turbo_broccoli.secret", "qualname": "SecretDict.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span>)</span>"}, "turbo_broccoli.secret.SecretFloat": {"fullname": "turbo_broccoli.secret.SecretFloat", "modulename": "turbo_broccoli.secret", "qualname": "SecretFloat", "kind": "class", "doc": "<p>A wrapper for a basic Python variable whose value is considered to be\nsecret. Similar API as <a href=\"https://pydantic-docs.helpmanual.io/usage/types/#secret-types\"><code>pydantic</code>'s secret\ntypes</a></p>\n", "bases": "Secret"}, "turbo_broccoli.secret.SecretFloat.__init__": {"fullname": "turbo_broccoli.secret.SecretFloat.__init__", "modulename": "turbo_broccoli.secret", "qualname": "SecretFloat.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span>)</span>"}, "turbo_broccoli.secret.SecretInt": {"fullname": "turbo_broccoli.secret.SecretInt", "modulename": "turbo_broccoli.secret", "qualname": "SecretInt", "kind": "class", "doc": "<p>A wrapper for a basic Python variable whose value is considered to be\nsecret. Similar API as <a href=\"https://pydantic-docs.helpmanual.io/usage/types/#secret-types\"><code>pydantic</code>'s secret\ntypes</a></p>\n", "bases": "Secret"}, "turbo_broccoli.secret.SecretInt.__init__": {"fullname": "turbo_broccoli.secret.SecretInt.__init__", "modulename": "turbo_broccoli.secret", "qualname": "SecretInt.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, "turbo_broccoli.secret.SecretList": {"fullname": "turbo_broccoli.secret.SecretList", "modulename": "turbo_broccoli.secret", "qualname": "SecretList", "kind": "class", "doc": "<p>A wrapper for a basic Python variable whose value is considered to be\nsecret. Similar API as <a href=\"https://pydantic-docs.helpmanual.io/usage/types/#secret-types\"><code>pydantic</code>'s secret\ntypes</a></p>\n", "bases": "Secret"}, "turbo_broccoli.secret.SecretList.__init__": {"fullname": "turbo_broccoli.secret.SecretList.__init__", "modulename": "turbo_broccoli.secret", "qualname": "SecretList.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span>)</span>"}, "turbo_broccoli.secret.SecretStr": {"fullname": "turbo_broccoli.secret.SecretStr", "modulename": "turbo_broccoli.secret", "qualname": "SecretStr", "kind": "class", "doc": "<p>A wrapper for a basic Python variable whose value is considered to be\nsecret. Similar API as <a href=\"https://pydantic-docs.helpmanual.io/usage/types/#secret-types\"><code>pydantic</code>'s secret\ntypes</a></p>\n", "bases": "Secret"}, "turbo_broccoli.secret.SecretStr.__init__": {"fullname": "turbo_broccoli.secret.SecretStr.__init__", "modulename": "turbo_broccoli.secret", "qualname": "SecretStr.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "turbo_broccoli.secret.from_json": {"fullname": "turbo_broccoli.secret.from_json", "modulename": "turbo_broccoli.secret", "qualname": "from_json", "kind": "function", "doc": "<p>Deserializes a dict into a secret Python type. See <code>to_json</code> for the\nspecification <code>dct</code> is expected to follow. In particular, note that <code>dct</code>\nmust contain the key <code>__secret__</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dct</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.secret.to_json": {"fullname": "turbo_broccoli.secret.to_json", "modulename": "turbo_broccoli.secret", "qualname": "to_json", "kind": "function", "doc": "<p>Encrypts a JSON <strong>string representation</strong> of a secret document into a new</p>\n\n<h6 id=\"json-document-with-the-following-structure\">JSON document with the following structure:</h6>\n\n<blockquote>\n  <p>{\n      \"__secret__\": {\n          \"__version__\": 1,\n          \"data\": <encrypted bytes>,\n      }\n  }</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">turbo_broccoli</span><span class=\"o\">.</span><span class=\"n\">secret</span><span class=\"o\">.</span><span class=\"n\">Secret</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.tensorflow": {"fullname": "turbo_broccoli.tensorflow", "modulename": "turbo_broccoli.tensorflow", "kind": "module", "doc": "<p>Tensorflow (de)serialization utilities.</p>\n"}, "turbo_broccoli.tensorflow.from_json": {"fullname": "turbo_broccoli.tensorflow.from_json", "modulename": "turbo_broccoli.tensorflow", "qualname": "from_json", "kind": "function", "doc": "<p>Deserializes a dict into a tensorflow object. See <code>to_json</code> for the\nspecification <code>dct</code> is expected to follow. In particular, note that <code>dct</code>\nmust contain the key <code>__tensorflow__</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dct</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.tensorflow.to_json": {"fullname": "turbo_broccoli.tensorflow.to_json", "modulename": "turbo_broccoli.tensorflow", "qualname": "to_json", "kind": "function", "doc": "<p>Serializes a tensorflow object into JSON by cases. See the README for the\nprecise list of supported types.</p>\n\n<p>The return dict has the following structure</p>\n\n<pre><code>{\n    \"__tensorflow__\": {...},\n}\n</code></pre>\n\n<p>where the <code>{...}</code> dict contains the actual data, and whose structure\ndepends on the precise type of <code>obj</code>.</p>\n\n<ul>\n<li><p><code>tf.RaggedTensor</code>: Not supported.</p></li>\n<li><p><code>tf.SparseTensor</code>:</p>\n\n<pre><code>{\n    \"__type__\": \"sparse_tensor\",\n    \"__version__\": 1,\n    \"indices\": {...},\n    \"values\": {...},\n    \"shape\": {...},\n}\n</code></pre>\n\n<p>where the first two <code>{...}</code> placeholders result in the serialization of\n<code>tf.Tensor</code> (see below).</p></li>\n<li><p>other <code>tf.Tensor</code> subtypes:</p>\n\n<pre><code>{\n    \"__type__\": \"tensor\",\n    \"__version__\": 1,\n    \"dtype\": &lt;str&gt;,\n    \"numpy\": {...},\n}\n</code></pre>\n\n<p>or, if the <code>safetensors</code> package is available:</p>\n\n<pre><code>{\n    \"__type__\": \"tensor\",\n    \"__version__\": 2,\n    \"dtype\": &lt;str&gt;,\n    \"data\": {...},\n}\n</code></pre>\n\n<p>On the other hand, if the <code>safetensors</code> package is available, and if the\ntensor is too large (i.e. the number of bytes exceeds <code>TB_MAX_NBYTES</code> or\nthe value set by <code>turbo_broccoli.environment.set_max_nbytes</code>), then the\ncontent of the tensor is stored in a binary artefact\u00b4. Said file is saved\nto the path specified by the <code>TB_ARTIFACT_PATH</code> environment variable with\na random UUID4 as filename. The resulting JSON document looks like</p>\n\n<pre><code>{\n    \"__numpy__\": {\n        \"__type__\": \"tensor\",\n        \"__version__\": 2,\n        \"id\": &lt;UUID4 str&gt;,\n    }\n}\n</code></pre>\n\n<p>By default, <code>TB_MAX_NBYTES</code> is <code>8000</code> bytes, which should be enough\nto store an array of 1000 <code>float64</code>s, and <code>TB_ARTIFACT_PATH</code> is <code>./</code>.\n<code>TB_ARTIFACT_PATH</code> must point to an existing directory.</p></li>\n<li><p><code>tf.Variable</code>:</p>\n\n<pre><code>{\n    \"__type__\": \"tensor\",\n    \"__version__\": 2,\n    \"name\": &lt;str&gt;,\n    \"value\": {...},\n    \"trainable\": &lt;bool&gt;,\n}\n</code></pre>\n\n<p>where <code>{...}</code> is the document produced by serializing the value tensor of\nthe variable.</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.turbo_broccoli": {"fullname": "turbo_broccoli.turbo_broccoli", "modulename": "turbo_broccoli.turbo_broccoli", "kind": "module", "doc": "<p>Main module containing the JSON encoder and decoder classes.</p>\n"}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"fullname": "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder", "modulename": "turbo_broccoli.turbo_broccoli", "qualname": "TurboBroccoliDecoder", "kind": "class", "doc": "<p>TurboBroccoli's custom JSON decoder class. See the README for the list of\nsupported types.</p>\n", "bases": "json.decoder.JSONDecoder"}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"fullname": "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__", "modulename": "turbo_broccoli.turbo_broccoli", "qualname": "TurboBroccoliDecoder.__init__", "kind": "function", "doc": "<p><code>object_hook</code>, if specified, will be called with the result\nof every JSON object decoded and its return value will be used in\nplace of the given <code>dict</code>.  This can be used to provide custom\ndeserializations (e.g. to support JSON-RPC class hinting).</p>\n\n<p><code>object_pairs_hook</code>, if specified will be called with the result of\nevery JSON object decoded with an ordered list of pairs.  The return\nvalue of <code>object_pairs_hook</code> will be used instead of the <code>dict</code>.\nThis feature can be used to implement custom decoders.\nIf <code>object_hook</code> is also defined, the <code>object_pairs_hook</code> takes\npriority.</p>\n\n<p><code>parse_float</code>, if specified, will be called with the string\nof every JSON float to be decoded. By default this is equivalent to\nfloat(num_str). This can be used to use another datatype or parser\nfor JSON floats (e.g. decimal.Decimal).</p>\n\n<p><code>parse_int</code>, if specified, will be called with the string\nof every JSON int to be decoded. By default this is equivalent to\nint(num_str). This can be used to use another datatype or parser\nfor JSON integers (e.g. float).</p>\n\n<p><code>parse_constant</code>, if specified, will be called with one of the\nfollowing strings: -Infinity, Infinity, NaN.\nThis can be used to raise an exception if invalid JSON numbers\nare encountered.</p>\n\n<p>If <code>strict</code> is false (true is the default), then control\ncharacters will be allowed inside strings.  Control characters in\nthis context are those with character codes in the 0-31 range,\nincluding <code>'\\t'</code> (tab), <code>'\\n'</code>, <code>'\\r'</code> and <code>'\\0'</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"fullname": "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder", "modulename": "turbo_broccoli.turbo_broccoli", "qualname": "TurboBroccoliEncoder", "kind": "class", "doc": "<p>TurboBroccoli's custom JSON decoder class. See the README for the list of\nsupported types.</p>\n", "bases": "json.encoder.JSONEncoder"}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"fullname": "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default", "modulename": "turbo_broccoli.turbo_broccoli", "qualname": "TurboBroccoliEncoder.default", "kind": "function", "doc": "<p>Implement this method in a subclass such that it returns\na serializable object for <code>o</code>, or calls the base implementation\n(to raise a <code>TypeError</code>).</p>\n\n<p>For example, to support arbitrary iterators, you could\nimplement default like this::</p>\n\n<pre><code>def default(self, o):\n    try:\n        iterable = iter(o)\n    except TypeError:\n        pass\n    else:\n        return list(iterable)\n    # Let the base class default method raise the TypeError\n    return JSONEncoder.default(self, o)\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">o</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"fullname": "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode", "modulename": "turbo_broccoli.turbo_broccoli", "qualname": "TurboBroccoliEncoder.encode", "kind": "function", "doc": "<p>Reimplementation of encode just to treat the <code>namedtuple</code> case. An\nobject is considered a namedtuple if it is an instance of <code>tuple</code> and\nhas the following attributes: <code>_asdict</code>, <code>_field_defaults</code>, <code>_fields</code>,\n<code>_make</code>, <code>_replace</code>. In this case,\n<code>turbo_broccoli.collections._namedtuple_to_json</code> is called directly.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">o</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "turbo_broccoli.utils": {"fullname": "turbo_broccoli.utils", "modulename": "turbo_broccoli.utils", "kind": "module", "doc": "<p>Various utilities and internal methods</p>\n"}, "turbo_broccoli.utils.warn_about_safetensors": {"fullname": "turbo_broccoli.utils.warn_about_safetensors", "modulename": "turbo_broccoli.utils", "qualname": "warn_about_safetensors", "kind": "function", "doc": "<p>If safetensors is not installed, logs a warning message. This method may be\ncalled multiple times, but the message will only be logged once.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"turbo_broccoli": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3332}, "turbo_broccoli.bytes": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "turbo_broccoli.bytes.from_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 41}, "turbo_broccoli.bytes.to_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 47}, "turbo_broccoli.collections": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "turbo_broccoli.collections.from_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 41}, "turbo_broccoli.collections.to_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 131}, "turbo_broccoli.dataclass": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 4}, "turbo_broccoli.dataclass.from_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 34}, "turbo_broccoli.dataclass.to_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 54}, "turbo_broccoli.environment": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 20}, "turbo_broccoli.environment.get_artifact_path": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "turbo_broccoli.environment.get_keras_format": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 3}, "turbo_broccoli.environment.get_pandas_format": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 3}, "turbo_broccoli.environment.get_max_nbytes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 3}, "turbo_broccoli.environment.get_registered_dataclass_type": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "turbo_broccoli.environment.get_registered_pytorch_module_type": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "turbo_broccoli.environment.get_shared_key": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "turbo_broccoli.environment.is_nodecode": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "turbo_broccoli.environment.register_dataclass_type": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 14}, "turbo_broccoli.environment.register_pytorch_module_type": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 19}, "turbo_broccoli.environment.set_artifact_path": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 3}, "turbo_broccoli.environment.set_keras_format": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 16}, "turbo_broccoli.environment.set_max_nbytes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "turbo_broccoli.environment.set_nodecode": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 3}, "turbo_broccoli.environment.set_pandas_format": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 46}, "turbo_broccoli.environment.set_shared_key": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 19}, "turbo_broccoli.generic": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "turbo_broccoli.generic.to_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 11}, "turbo_broccoli.keras": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "turbo_broccoli.keras.from_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 41}, "turbo_broccoli.keras.to_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 207}, "turbo_broccoli.numpy": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 31}, "turbo_broccoli.numpy.from_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 41}, "turbo_broccoli.numpy.to_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 391}, "turbo_broccoli.pandas": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "turbo_broccoli.pandas.from_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 41}, "turbo_broccoli.pandas.to_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 407}, "turbo_broccoli.pytorch": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "turbo_broccoli.pytorch.from_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 43}, "turbo_broccoli.pytorch.to_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 66}, "turbo_broccoli.secret": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 4}, "turbo_broccoli.secret.Secret": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "turbo_broccoli.secret.Secret.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "turbo_broccoli.secret.Secret.get_secret_value": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 4}, "turbo_broccoli.secret.LockedSecret": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 31}, "turbo_broccoli.secret.LockedSecret.get_secret_value": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 4}, "turbo_broccoli.secret.SecretDict": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 27}, "turbo_broccoli.secret.SecretDict.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "turbo_broccoli.secret.SecretFloat": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 27}, "turbo_broccoli.secret.SecretFloat.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "turbo_broccoli.secret.SecretInt": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 27}, "turbo_broccoli.secret.SecretInt.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "turbo_broccoli.secret.SecretList": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 27}, "turbo_broccoli.secret.SecretList.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "turbo_broccoli.secret.SecretStr": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 27}, "turbo_broccoli.secret.SecretStr.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "turbo_broccoli.secret.from_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 42}, "turbo_broccoli.secret.to_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 43}, "turbo_broccoli.tensorflow": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "turbo_broccoli.tensorflow.from_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 41}, "turbo_broccoli.tensorflow.to_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 419}, "turbo_broccoli.turbo_broccoli": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 18}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 310}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 18}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 81}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 69}, "turbo_broccoli.utils": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "turbo_broccoli.utils.warn_about_safetensors": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 27}}, "length": 70, "save": true}, "index": {"qualname": {"root": {"docs": {"turbo_broccoli.secret.Secret.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretDict.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretFloat.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretInt.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretList.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretStr.__init__": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 7, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}}, "df": 9}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.environment.get_keras_format": {"tf": 1}, "turbo_broccoli.environment.get_pandas_format": {"tf": 1}, "turbo_broccoli.environment.set_keras_format": {"tf": 1}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 4}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.generic.to_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 19}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.generic.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 10}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.environment.get_registered_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.environment.get_artifact_path": {"tf": 1}, "turbo_broccoli.environment.get_keras_format": {"tf": 1}, "turbo_broccoli.environment.get_pandas_format": {"tf": 1}, "turbo_broccoli.environment.get_max_nbytes": {"tf": 1}, "turbo_broccoli.environment.get_registered_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.get_shared_key": {"tf": 1}, "turbo_broccoli.secret.Secret.get_secret_value": {"tf": 1}, "turbo_broccoli.secret.LockedSecret.get_secret_value": {"tf": 1}}, "df": 9}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.environment.get_artifact_path": {"tf": 1}, "turbo_broccoli.environment.set_artifact_path": {"tf": 1}}, "df": 2}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"turbo_broccoli.environment.get_artifact_path": {"tf": 1}, "turbo_broccoli.environment.set_artifact_path": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.environment.get_pandas_format": {"tf": 1}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}}, "df": 2}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.environment.get_keras_format": {"tf": 1}, "turbo_broccoli.environment.set_keras_format": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"turbo_broccoli.environment.get_shared_key": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"turbo_broccoli.environment.get_max_nbytes": {"tf": 1}, "turbo_broccoli.environment.set_max_nbytes": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.environment.get_max_nbytes": {"tf": 1}, "turbo_broccoli.environment.set_max_nbytes": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.environment.is_nodecode": {"tf": 1}, "turbo_broccoli.environment.set_nodecode": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.environment.get_registered_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 1}}, "df": 2}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.environment.get_registered_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.environment.get_shared_key": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.environment.set_artifact_path": {"tf": 1}, "turbo_broccoli.environment.set_keras_format": {"tf": 1}, "turbo_broccoli.environment.set_max_nbytes": {"tf": 1}, "turbo_broccoli.environment.set_nodecode": {"tf": 1}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}}, "df": 6}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.Secret.__init__": {"tf": 1}, "turbo_broccoli.secret.Secret.get_secret_value": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.LockedSecret.get_secret_value": {"tf": 1}}, "df": 4, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretDict.__init__": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretFloat.__init__": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretInt.__init__": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretList.__init__": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.secret.SecretStr": {"tf": 1}, "turbo_broccoli.secret.SecretStr.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.environment.is_nodecode": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.secret.Secret.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretDict.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretFloat.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretInt.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretList.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretStr.__init__": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 7}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.secret.Secret.get_secret_value": {"tf": 1}, "turbo_broccoli.secret.LockedSecret.get_secret_value": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.secret.LockedSecret": {"tf": 1}, "turbo_broccoli.secret.LockedSecret.get_secret_value": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 1}}}}}}, "fullname": {"root": {"docs": {"turbo_broccoli.secret.Secret.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretDict.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretFloat.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretInt.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretList.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretStr.__init__": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.bytes": {"tf": 1}, "turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.environment": {"tf": 1}, "turbo_broccoli.environment.get_artifact_path": {"tf": 1}, "turbo_broccoli.environment.get_keras_format": {"tf": 1}, "turbo_broccoli.environment.get_pandas_format": {"tf": 1}, "turbo_broccoli.environment.get_max_nbytes": {"tf": 1}, "turbo_broccoli.environment.get_registered_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.get_shared_key": {"tf": 1}, "turbo_broccoli.environment.is_nodecode": {"tf": 1}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.set_artifact_path": {"tf": 1}, "turbo_broccoli.environment.set_keras_format": {"tf": 1}, "turbo_broccoli.environment.set_max_nbytes": {"tf": 1}, "turbo_broccoli.environment.set_nodecode": {"tf": 1}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}, "turbo_broccoli.generic": {"tf": 1}, "turbo_broccoli.generic.to_json": {"tf": 1}, "turbo_broccoli.keras": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret": {"tf": 1}, "turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.Secret.__init__": {"tf": 1}, "turbo_broccoli.secret.Secret.get_secret_value": {"tf": 1}, "turbo_broccoli.secret.LockedSecret": {"tf": 1}, "turbo_broccoli.secret.LockedSecret.get_secret_value": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretDict.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretFloat.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretInt.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretList.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}, "turbo_broccoli.secret.SecretStr.__init__": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.tensorflow": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1.4142135623730951}, "turbo_broccoli.utils": {"tf": 1}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 70, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}, "o": {"docs": {"turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.generic.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 10}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.environment.get_registered_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"turbo_broccoli.tensorflow": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 3}}}}}}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.bytes": {"tf": 1}, "turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.environment": {"tf": 1}, "turbo_broccoli.environment.get_artifact_path": {"tf": 1}, "turbo_broccoli.environment.get_keras_format": {"tf": 1}, "turbo_broccoli.environment.get_pandas_format": {"tf": 1}, "turbo_broccoli.environment.get_max_nbytes": {"tf": 1}, "turbo_broccoli.environment.get_registered_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.get_shared_key": {"tf": 1}, "turbo_broccoli.environment.is_nodecode": {"tf": 1}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.set_artifact_path": {"tf": 1}, "turbo_broccoli.environment.set_keras_format": {"tf": 1}, "turbo_broccoli.environment.set_max_nbytes": {"tf": 1}, "turbo_broccoli.environment.set_nodecode": {"tf": 1}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}, "turbo_broccoli.generic": {"tf": 1}, "turbo_broccoli.generic.to_json": {"tf": 1}, "turbo_broccoli.keras": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret": {"tf": 1}, "turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.Secret.__init__": {"tf": 1}, "turbo_broccoli.secret.Secret.get_secret_value": {"tf": 1}, "turbo_broccoli.secret.LockedSecret": {"tf": 1}, "turbo_broccoli.secret.LockedSecret.get_secret_value": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretDict.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretFloat.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretInt.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretList.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}, "turbo_broccoli.secret.SecretStr.__init__": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.tensorflow": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1.4142135623730951}, "turbo_broccoli.utils": {"tf": 1}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 70}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.bytes": {"tf": 1}, "turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.bytes.to_json": {"tf": 1}}, "df": 3}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}}, "df": 9}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.environment.get_keras_format": {"tf": 1}, "turbo_broccoli.environment.get_pandas_format": {"tf": 1}, "turbo_broccoli.environment.set_keras_format": {"tf": 1}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 4}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.generic.to_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 19}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.collections": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}}, "df": 3}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.dataclass": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.environment.get_registered_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 1}}, "df": 5}}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.environment": {"tf": 1}, "turbo_broccoli.environment.get_artifact_path": {"tf": 1}, "turbo_broccoli.environment.get_keras_format": {"tf": 1}, "turbo_broccoli.environment.get_pandas_format": {"tf": 1}, "turbo_broccoli.environment.get_max_nbytes": {"tf": 1}, "turbo_broccoli.environment.get_registered_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.get_shared_key": {"tf": 1}, "turbo_broccoli.environment.is_nodecode": {"tf": 1}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.set_artifact_path": {"tf": 1}, "turbo_broccoli.environment.set_keras_format": {"tf": 1}, "turbo_broccoli.environment.set_max_nbytes": {"tf": 1}, "turbo_broccoli.environment.set_nodecode": {"tf": 1}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}}, "df": 17}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.environment.get_artifact_path": {"tf": 1}, "turbo_broccoli.environment.get_keras_format": {"tf": 1}, "turbo_broccoli.environment.get_pandas_format": {"tf": 1}, "turbo_broccoli.environment.get_max_nbytes": {"tf": 1}, "turbo_broccoli.environment.get_registered_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.get_shared_key": {"tf": 1}, "turbo_broccoli.secret.Secret.get_secret_value": {"tf": 1}, "turbo_broccoli.secret.LockedSecret.get_secret_value": {"tf": 1}}, "df": 9}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"turbo_broccoli.generic": {"tf": 1}, "turbo_broccoli.generic.to_json": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.environment.get_artifact_path": {"tf": 1}, "turbo_broccoli.environment.set_artifact_path": {"tf": 1}}, "df": 2}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"turbo_broccoli.environment.get_artifact_path": {"tf": 1}, "turbo_broccoli.environment.set_artifact_path": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.environment.get_pandas_format": {"tf": 1}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}, "turbo_broccoli.pandas": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 5}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}, "turbo_broccoli.pytorch": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}}, "df": 5}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.environment.get_keras_format": {"tf": 1}, "turbo_broccoli.environment.set_keras_format": {"tf": 1}, "turbo_broccoli.keras": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}}, "df": 5}}}, "y": {"docs": {"turbo_broccoli.environment.get_shared_key": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"turbo_broccoli.environment.get_max_nbytes": {"tf": 1}, "turbo_broccoli.environment.set_max_nbytes": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.environment.get_max_nbytes": {"tf": 1}, "turbo_broccoli.environment.set_max_nbytes": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.environment.is_nodecode": {"tf": 1}, "turbo_broccoli.environment.set_nodecode": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli.numpy": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.environment.get_registered_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 1}}, "df": 2}}}}}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.environment.get_shared_key": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.environment.set_artifact_path": {"tf": 1}, "turbo_broccoli.environment.set_keras_format": {"tf": 1}, "turbo_broccoli.environment.set_max_nbytes": {"tf": 1}, "turbo_broccoli.environment.set_nodecode": {"tf": 1}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}}, "df": 6}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.secret": {"tf": 1}, "turbo_broccoli.secret.Secret": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.Secret.__init__": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.Secret.get_secret_value": {"tf": 1.7320508075688772}, "turbo_broccoli.secret.LockedSecret": {"tf": 1}, "turbo_broccoli.secret.LockedSecret.get_secret_value": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretDict.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretFloat.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretInt.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretList.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}, "turbo_broccoli.secret.SecretStr.__init__": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.secret.to_json": {"tf": 1}}, "df": 18, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretDict.__init__": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretFloat.__init__": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretInt.__init__": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretList.__init__": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.secret.SecretStr": {"tf": 1}, "turbo_broccoli.secret.SecretStr.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.environment.is_nodecode": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.secret.Secret.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretDict.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretFloat.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretInt.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretList.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretStr.__init__": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 7}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.secret.Secret.get_secret_value": {"tf": 1}, "turbo_broccoli.secret.LockedSecret.get_secret_value": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.secret.LockedSecret": {"tf": 1}, "turbo_broccoli.secret.LockedSecret.get_secret_value": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.utils": {"tf": 1}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 2}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 1}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 5.0990195135927845}, "turbo_broccoli.bytes.to_json": {"tf": 4}, "turbo_broccoli.collections.from_json": {"tf": 4}, "turbo_broccoli.collections.to_json": {"tf": 4}, "turbo_broccoli.dataclass.from_json": {"tf": 4}, "turbo_broccoli.dataclass.to_json": {"tf": 4}, "turbo_broccoli.environment.get_artifact_path": {"tf": 3.605551275463989}, "turbo_broccoli.environment.get_keras_format": {"tf": 3}, "turbo_broccoli.environment.get_pandas_format": {"tf": 3}, "turbo_broccoli.environment.get_max_nbytes": {"tf": 3}, "turbo_broccoli.environment.get_registered_dataclass_type": {"tf": 4}, "turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 4}, "turbo_broccoli.environment.get_shared_key": {"tf": 4.358898943540674}, "turbo_broccoli.environment.is_nodecode": {"tf": 4}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 3.7416573867739413}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 3.7416573867739413}, "turbo_broccoli.environment.set_artifact_path": {"tf": 5.291502622129181}, "turbo_broccoli.environment.set_keras_format": {"tf": 3.7416573867739413}, "turbo_broccoli.environment.set_max_nbytes": {"tf": 3.7416573867739413}, "turbo_broccoli.environment.set_nodecode": {"tf": 5.196152422706632}, "turbo_broccoli.environment.set_pandas_format": {"tf": 3.7416573867739413}, "turbo_broccoli.environment.set_shared_key": {"tf": 5.385164807134504}, "turbo_broccoli.generic.to_json": {"tf": 4}, "turbo_broccoli.keras.from_json": {"tf": 4}, "turbo_broccoli.keras.to_json": {"tf": 4}, "turbo_broccoli.numpy.from_json": {"tf": 4}, "turbo_broccoli.numpy.to_json": {"tf": 4}, "turbo_broccoli.pandas.from_json": {"tf": 4}, "turbo_broccoli.pandas.to_json": {"tf": 4}, "turbo_broccoli.pytorch.from_json": {"tf": 4}, "turbo_broccoli.pytorch.to_json": {"tf": 4}, "turbo_broccoli.secret.Secret.__init__": {"tf": 3.4641016151377544}, "turbo_broccoli.secret.Secret.get_secret_value": {"tf": 3.4641016151377544}, "turbo_broccoli.secret.LockedSecret.get_secret_value": {"tf": 3.4641016151377544}, "turbo_broccoli.secret.SecretDict.__init__": {"tf": 3.4641016151377544}, "turbo_broccoli.secret.SecretFloat.__init__": {"tf": 3.4641016151377544}, "turbo_broccoli.secret.SecretInt.__init__": {"tf": 3.4641016151377544}, "turbo_broccoli.secret.SecretList.__init__": {"tf": 3.4641016151377544}, "turbo_broccoli.secret.SecretStr.__init__": {"tf": 3.4641016151377544}, "turbo_broccoli.secret.from_json": {"tf": 4}, "turbo_broccoli.secret.to_json": {"tf": 4.898979485566356}, "turbo_broccoli.tensorflow.from_json": {"tf": 4}, "turbo_broccoli.tensorflow.to_json": {"tf": 4}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 4}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 4.47213595499958}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 4.47213595499958}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 2.6457513110645907}}, "df": 47, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.generic.to_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret.SecretDict.__init__": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 20}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.environment.get_shared_key": {"tf": 1}, "turbo_broccoli.environment.set_artifact_path": {"tf": 1}, "turbo_broccoli.environment.set_nodecode": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}}, "df": 5}}}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.environment.get_shared_key": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli.environment.is_nodecode": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"turbo_broccoli.secret.to_json": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.environment.get_shared_key": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.secret.LockedSecret.get_secret_value": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.environment.get_registered_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.is_nodecode": {"tf": 1}}, "df": 3}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.environment.set_max_nbytes": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "j": {"docs": {"turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.generic.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 10}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.generic.to_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret.Secret.__init__": {"tf": 1}, "turbo_broccoli.secret.Secret.get_secret_value": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 21}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"turbo_broccoli.environment.get_artifact_path": {"tf": 1}, "turbo_broccoli.environment.set_artifact_path": {"tf": 1.4142135623730951}}, "df": 2, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"turbo_broccoli.environment.get_artifact_path": {"tf": 1}, "turbo_broccoli.environment.set_artifact_path": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.environment.get_keras_format": {"tf": 1}, "turbo_broccoli.environment.get_pandas_format": {"tf": 1}, "turbo_broccoli.environment.get_registered_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.is_nodecode": {"tf": 1}, "turbo_broccoli.environment.set_artifact_path": {"tf": 1}, "turbo_broccoli.environment.set_keras_format": {"tf": 1}, "turbo_broccoli.environment.set_nodecode": {"tf": 1.4142135623730951}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}, "turbo_broccoli.secret.SecretStr.__init__": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 12}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"turbo_broccoli.secret.Secret.get_secret_value": {"tf": 1}, "turbo_broccoli.secret.LockedSecret.get_secret_value": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.secret.to_json": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.environment.get_max_nbytes": {"tf": 1}, "turbo_broccoli.environment.set_max_nbytes": {"tf": 1}, "turbo_broccoli.secret.SecretInt.__init__": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.environment.get_registered_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.is_nodecode": {"tf": 1}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}}, "df": 5, "s": {"docs": {"turbo_broccoli.environment.set_nodecode": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {"turbo_broccoli.secret.to_json": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.environment.set_keras_format": {"tf": 1}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.secret.SecretFloat.__init__": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.environment.set_nodecode": {"tf": 1}, "turbo_broccoli.secret.SecretList.__init__": {"tf": 1}}, "df": 2}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli.environment.set_shared_key": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.secret.Secret.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretDict.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretFloat.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretInt.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretList.__init__": {"tf": 1}, "turbo_broccoli.secret.SecretStr.__init__": {"tf": 1}}, "df": 6}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.secret.LockedSecret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}}, "df": 6}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}}, "df": 1}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}}, "df": 1}}}}}}}}}, "doc": {"root": {"0": {"9": {"6": {"9": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"5": {"5": {"2": {"docs": {}, "df": 0, "d": {"5": {"docs": {}, "df": 0, "a": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "1": {"0": {"0": {"0": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"turbo_broccoli": {"tf": 2.8284271247461903}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 2.23606797749979}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}}, "df": 7}, "2": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.7320508075688772}}, "df": 5}, "3": {"1": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}, "docs": {"turbo_broccoli": {"tf": 2}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}}, "df": 2}, "4": {"2": {"3": {"1": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}, "3": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}, "docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}, "6": {"4": {"docs": {"turbo_broccoli.bytes.to_json": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "7": {"0": {"6": {"9": {"2": {"docs": {}, "df": 0, "d": {"0": {"8": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"0": {"0": {"0": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"turbo_broccoli.environment.set_shared_key": {"tf": 1}}, "df": 1}, "9": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"turbo_broccoli": {"tf": 45.43126676640219}, "turbo_broccoli.bytes": {"tf": 1.7320508075688772}, "turbo_broccoli.bytes.from_json": {"tf": 3.605551275463989}, "turbo_broccoli.bytes.to_json": {"tf": 4.47213595499958}, "turbo_broccoli.collections": {"tf": 1.4142135623730951}, "turbo_broccoli.collections.from_json": {"tf": 3.605551275463989}, "turbo_broccoli.collections.to_json": {"tf": 8.366600265340756}, "turbo_broccoli.dataclass": {"tf": 1.4142135623730951}, "turbo_broccoli.dataclass.from_json": {"tf": 3}, "turbo_broccoli.dataclass.to_json": {"tf": 5.196152422706632}, "turbo_broccoli.environment": {"tf": 2.23606797749979}, "turbo_broccoli.environment.get_artifact_path": {"tf": 1.7320508075688772}, "turbo_broccoli.environment.get_keras_format": {"tf": 1.7320508075688772}, "turbo_broccoli.environment.get_pandas_format": {"tf": 1.7320508075688772}, "turbo_broccoli.environment.get_max_nbytes": {"tf": 1.7320508075688772}, "turbo_broccoli.environment.get_registered_dataclass_type": {"tf": 1.7320508075688772}, "turbo_broccoli.environment.get_registered_pytorch_module_type": {"tf": 1.7320508075688772}, "turbo_broccoli.environment.get_shared_key": {"tf": 1.7320508075688772}, "turbo_broccoli.environment.is_nodecode": {"tf": 1.7320508075688772}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 1.7320508075688772}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 2.23606797749979}, "turbo_broccoli.environment.set_artifact_path": {"tf": 1.7320508075688772}, "turbo_broccoli.environment.set_keras_format": {"tf": 3}, "turbo_broccoli.environment.set_max_nbytes": {"tf": 1.7320508075688772}, "turbo_broccoli.environment.set_nodecode": {"tf": 1.7320508075688772}, "turbo_broccoli.environment.set_pandas_format": {"tf": 5.0990195135927845}, "turbo_broccoli.environment.set_shared_key": {"tf": 2.23606797749979}, "turbo_broccoli.generic": {"tf": 2.23606797749979}, "turbo_broccoli.generic.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.keras": {"tf": 1.7320508075688772}, "turbo_broccoli.keras.from_json": {"tf": 3.605551275463989}, "turbo_broccoli.keras.to_json": {"tf": 9.38083151964686}, "turbo_broccoli.numpy": {"tf": 4}, "turbo_broccoli.numpy.from_json": {"tf": 3.605551275463989}, "turbo_broccoli.numpy.to_json": {"tf": 11.575836902790225}, "turbo_broccoli.pandas": {"tf": 1.7320508075688772}, "turbo_broccoli.pandas.from_json": {"tf": 3.605551275463989}, "turbo_broccoli.pandas.to_json": {"tf": 12.083045973594572}, "turbo_broccoli.pytorch": {"tf": 1.7320508075688772}, "turbo_broccoli.pytorch.from_json": {"tf": 3.872983346207417}, "turbo_broccoli.pytorch.to_json": {"tf": 4.898979485566356}, "turbo_broccoli.secret": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.Secret": {"tf": 2.449489742783178}, "turbo_broccoli.secret.Secret.__init__": {"tf": 1.7320508075688772}, "turbo_broccoli.secret.Secret.get_secret_value": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.LockedSecret": {"tf": 2.6457513110645907}, "turbo_broccoli.secret.LockedSecret.get_secret_value": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.SecretDict": {"tf": 2.449489742783178}, "turbo_broccoli.secret.SecretDict.__init__": {"tf": 1.7320508075688772}, "turbo_broccoli.secret.SecretFloat": {"tf": 2.449489742783178}, "turbo_broccoli.secret.SecretFloat.__init__": {"tf": 1.7320508075688772}, "turbo_broccoli.secret.SecretInt": {"tf": 2.449489742783178}, "turbo_broccoli.secret.SecretInt.__init__": {"tf": 1.7320508075688772}, "turbo_broccoli.secret.SecretList": {"tf": 2.449489742783178}, "turbo_broccoli.secret.SecretList.__init__": {"tf": 1.7320508075688772}, "turbo_broccoli.secret.SecretStr": {"tf": 2.449489742783178}, "turbo_broccoli.secret.SecretStr.__init__": {"tf": 1.7320508075688772}, "turbo_broccoli.secret.from_json": {"tf": 3.605551275463989}, "turbo_broccoli.secret.to_json": {"tf": 4.58257569495584}, "turbo_broccoli.tensorflow": {"tf": 1.7320508075688772}, "turbo_broccoli.tensorflow.from_json": {"tf": 3.605551275463989}, "turbo_broccoli.tensorflow.to_json": {"tf": 13.038404810405298}, "turbo_broccoli.turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1.7320508075688772}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 7.483314773547883}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1.7320508075688772}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 4}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 4.898979485566356}, "turbo_broccoli.utils": {"tf": 1.4142135623730951}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1.7320508075688772}}, "df": 70, "t": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {"turbo_broccoli": {"tf": 5.5677643628300215}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.generic": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 6, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli": {"tf": 2.449489742783178}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli": {"tf": 2.449489742783178}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 3.1622776601683795}}, "df": 3, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"turbo_broccoli": {"tf": 2.6457513110645907}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.tensorflow": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}}, "df": 5}}}}, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1, "s": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {"turbo_broccoli": {"tf": 4.58257569495584}, "turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 2.6457513110645907}, "turbo_broccoli.pandas.to_json": {"tf": 2}, "turbo_broccoli.tensorflow.to_json": {"tf": 2.23606797749979}}, "df": 5}, "h": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 6.324555320336759}, "turbo_broccoli.bytes.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.bytes.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.collections.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.collections.to_json": {"tf": 2.6457513110645907}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.environment": {"tf": 1.4142135623730951}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.keras.to_json": {"tf": 3.3166247903554}, "turbo_broccoli.numpy": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 4.358898943540674}, "turbo_broccoli.pandas.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 4.58257569495584}, "turbo_broccoli.pytorch.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pytorch.to_json": {"tf": 2.6457513110645907}, "turbo_broccoli.secret.LockedSecret": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 4.795831523312719}, "turbo_broccoli.turbo_broccoli": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 3.3166247903554}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1.7320508075688772}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1.4142135623730951}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 31, "m": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}, "y": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}, "n": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.secret.LockedSecret": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 11}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 2.23606797749979}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 2.8284271247461903}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 6}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 3.4641016151377544}, "turbo_broccoli.collections.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.numpy": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 2.23606797749979}, "turbo_broccoli.pandas.to_json": {"tf": 2.449489742783178}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 2.449489742783178}}, "df": 11, "s": {"docs": {"turbo_broccoli": {"tf": 2.449489742783178}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}}, "df": 17}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "o": {"docs": {"turbo_broccoli": {"tf": 4}, "turbo_broccoli.bytes.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.collections.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.dataclass.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.generic": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.pandas.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.pytorch.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 3.1622776601683795}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1.4142135623730951}}, "df": 23, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"turbo_broccoli": {"tf": 2}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}}, "df": 2}}}, "o": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 4}, "d": {"docs": {}, "df": 0, "o": {"docs": {"turbo_broccoli.environment.set_pandas_format": {"tf": 1}, "turbo_broccoli.numpy": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 1}}, "f": {"docs": {"turbo_broccoli": {"tf": 2}, "turbo_broccoli.environment.set_keras_format": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 2.23606797749979}}, "df": 4}, "x": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 2}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}, "y": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 1}}}}}, "b": {"3": {"docs": {}, "df": 0, "f": {"0": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}, "docs": {"turbo_broccoli": {"tf": 2}}, "df": 1, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"turbo_broccoli": {"tf": 5.5677643628300215}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.generic": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 6}}}}}, "w": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "y": {"docs": {"turbo_broccoli": {"tf": 2}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.generic.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 2}, "turbo_broccoli.pandas.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 2.23606797749979}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 10, "t": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"turbo_broccoli": {"tf": 2.449489742783178}, "turbo_broccoli.bytes": {"tf": 1}, "turbo_broccoli.bytes.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.bytes.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}}, "df": 7}}}}, "e": {"docs": {"turbo_broccoli": {"tf": 4.123105625617661}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.LockedSecret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 3.872983346207417}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1.4142135623730951}}, "df": 17, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.secret.LockedSecret": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}}, "df": 7}}, "e": {"docs": {"turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1.4142135623730951}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 4.358898943540674}, "turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.environment.set_keras_format": {"tf": 1}, "turbo_broccoli.generic": {"tf": 1}, "turbo_broccoli.generic.to_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 2}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.secret.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 2.8284271247461903}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 27, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 1, "e": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.bytes": {"tf": 1}, "turbo_broccoli.collections": {"tf": 1}, "turbo_broccoli.keras": {"tf": 1}, "turbo_broccoli.numpy": {"tf": 1}, "turbo_broccoli.pandas": {"tf": 1}, "turbo_broccoli.pytorch": {"tf": 1}, "turbo_broccoli.tensorflow": {"tf": 1}}, "df": 8, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 2.449489742783178}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}}, "df": 3, "s": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}}, "df": 9}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.collections.to_json": {"tf": 1.4142135623730951}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.secret.LockedSecret": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.turbo_broccoli": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}}, "df": 3, "s": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}, "d": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 2}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "f": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 2.23606797749979}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.7320508075688772}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 2}}, "df": 6, "s": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "s": {"docs": {"turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"1": {"docs": {"turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 2.449489742783178}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"turbo_broccoli": {"tf": 2.23606797749979}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.pandas.to_json": {"tf": 2}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}}, "df": 10, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 2}, "turbo_broccoli.dataclass": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.dataclass.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 1.4142135623730951}}, "df": 5, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 2}, "turbo_broccoli.pandas.to_json": {"tf": 3.1622776601683795}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "o": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1, "c": {"docs": {"turbo_broccoli": {"tf": 2.23606797749979}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 2}, "turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 2}, "turbo_broccoli.secret.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}}, "df": 6, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}}, "df": 1}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 19}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 2}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.collections.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pytorch.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.from_json": {"tf": 1.4142135623730951}}, "df": 9}}}, "s": {"docs": {"turbo_broccoli": {"tf": 2}, "turbo_broccoli.numpy": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}}, "df": 12, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 2.8284271247461903}, "turbo_broccoli.bytes": {"tf": 1}, "turbo_broccoli.collections": {"tf": 1}, "turbo_broccoli.dataclass": {"tf": 1}, "turbo_broccoli.generic": {"tf": 1}, "turbo_broccoli.keras": {"tf": 1}, "turbo_broccoli.numpy": {"tf": 1}, "turbo_broccoli.pandas": {"tf": 1}, "turbo_broccoli.pytorch": {"tf": 1}, "turbo_broccoli.tensorflow": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 11}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.secret": {"tf": 1}}, "df": 3, "d": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 3}, "s": {"docs": {"turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.generic.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 2}, "turbo_broccoli.pandas.to_json": {"tf": 2.6457513110645907}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 4.242640687119285}, "turbo_broccoli.secret.Secret": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.LockedSecret": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.SecretDict": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.SecretFloat": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.SecretInt": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.SecretList": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.SecretStr": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.to_json": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.secret": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "e": {"docs": {"turbo_broccoli": {"tf": 2.6457513110645907}, "turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.environment": {"tf": 1}, "turbo_broccoli.generic": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}}, "df": 20}, "t": {"docs": {"turbo_broccoli": {"tf": 2.8284271247461903}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}}, "df": 3, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1, "s": {"docs": {"turbo_broccoli.environment": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"turbo_broccoli.secret.Secret.get_secret_value": {"tf": 1}, "turbo_broccoli.secret.LockedSecret.get_secret_value": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1.4142135623730951}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.pandas.to_json": {"tf": 2.449489742783178}, "turbo_broccoli.tensorflow.to_json": {"tf": 2}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 8, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli": {"tf": 2.23606797749979}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pytorch.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}}, "df": 9}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.collections": {"tf": 1}}, "df": 2, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "a": {"docs": {"turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 3, "d": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.keras.to_json": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}}, "df": 6}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.environment": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}}, "df": 10}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.numpy": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 2.449489742783178}, "turbo_broccoli.secret.LockedSecret": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.generic": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}}, "df": 9}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 2.23606797749979}}, "df": 4}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 4}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 4}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.bytes.to_json": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.7320508075688772}}, "df": 4, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}}, "df": 10}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli.secret.Secret.get_secret_value": {"tf": 1}, "turbo_broccoli.secret.LockedSecret.get_secret_value": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 2}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"turbo_broccoli.keras.to_json": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {"turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"turbo_broccoli.secret.to_json": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 1, "d": {"docs": {"turbo_broccoli.environment.set_shared_key": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}}, "df": 2}, "r": {"docs": {"turbo_broccoli.turbo_broccoli": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 3.1622776601683795}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.environment": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.pandas.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 2}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 2}}, "df": 1, "r": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.keras.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.numpy.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {"turbo_broccoli": {"tf": 2}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 2.449489742783178}, "turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.generic": {"tf": 1}, "turbo_broccoli.generic.to_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 2.6457513110645907}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 18, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 2}, "turbo_broccoli.pandas.to_json": {"tf": 2}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}}, "df": 7, "l": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 2}}, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"turbo_broccoli": {"tf": 3.7416573867739413}, "turbo_broccoli.collections.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.generic": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 2.23606797749979}, "turbo_broccoli.pandas.to_json": {"tf": 2}, "turbo_broccoli.pytorch.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 2.6457513110645907}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 3}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1.4142135623730951}}, "df": 13}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.keras.to_json": {"tf": 1}}, "df": 2, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}}, "df": 2}}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "a": {"docs": {"turbo_broccoli": {"tf": 3.605551275463989}, "turbo_broccoli.bytes.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.bytes.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.collections.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}, "turbo_broccoli.generic.to_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 2.23606797749979}, "turbo_broccoli.pytorch.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret.Secret": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.LockedSecret": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.SecretDict": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.SecretFloat": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.SecretInt": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.SecretList": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.SecretStr": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.tensorflow.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1.7320508075688772}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 33, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {"turbo_broccoli": {"tf": 3.1622776601683795}, "turbo_broccoli.numpy.to_json": {"tf": 2}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1.4142135623730951}}, "df": 6, "d": {"docs": {"turbo_broccoli": {"tf": 3.872983346207417}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.environment": {"tf": 1}, "turbo_broccoli.environment.set_keras_format": {"tf": 1}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.pandas.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.turbo_broccoli": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}, "turbo_broccoli.utils": {"tf": 1}}, "df": 15}, "y": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 10, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli": {"tf": 2.8284271247461903}, "turbo_broccoli.numpy.to_json": {"tf": 2}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 3, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"turbo_broccoli": {"tf": 2.6457513110645907}, "turbo_broccoli.environment.set_keras_format": {"tf": 1}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 5}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 2.8284271247461903}, "turbo_broccoli.numpy.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.7320508075688772}}, "df": 4, "s": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 6}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"turbo_broccoli": {"tf": 2.6457513110645907}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 2}}, "l": {"docs": {"turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.secret.LockedSecret": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.environment": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}}, "df": 6}}}, "n": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 1, "p": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli": {"tf": 3.872983346207417}, "turbo_broccoli.numpy": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 2.8284271247461903}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}}, "df": 5}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 4, "s": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}}, "df": 1}}}, "p": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}}, "df": 1, "y": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli": {"tf": 2.6457513110645907}, "turbo_broccoli.numpy.to_json": {"tf": 2}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.collections.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1.7320508075688772}}, "df": 3}}}}}}, "s": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli": {"tf": 2}}, "df": 1}}, "n": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}, "o": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {"turbo_broccoli": {"tf": 2.8284271247461903}, "turbo_broccoli.secret.LockedSecret": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 4, "e": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}}, "df": 8}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "w": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}, "n": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}}, "df": 2}, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.numpy.to_json": {"tf": 2.449489742783178}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.7320508075688772}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"turbo_broccoli.secret.to_json": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 3, "n": {"docs": {"turbo_broccoli": {"tf": 3.7416573867739413}, "turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.7320508075688772}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 16, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli": {"tf": 2}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 2}}, "df": 1}}}}}}}, "x": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"turbo_broccoli": {"tf": 2.449489742783178}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.7320508075688772}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli.utils": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.generic.to_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 19}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.environment": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 2.6457513110645907}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {"turbo_broccoli": {"tf": 3.7416573867739413}, "turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 3}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 3}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 2.8284271247461903}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 2.23606797749979}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1.7320508075688772}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 25}, "t": {"docs": {"turbo_broccoli": {"tf": 2.23606797749979}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 6, "s": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "#": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}, "f": {"docs": {"turbo_broccoli": {"tf": 2.6457513110645907}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 2.8284271247461903}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 9}, "d": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 5}}, "p": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "p": {"docs": {"turbo_broccoli": {"tf": 2.23606797749979}}, "df": 1}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1, "s": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}}, "df": 1}, "d": {"docs": {"turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}, "turbo_broccoli.secret.LockedSecret": {"tf": 1}}, "df": 3}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.collections.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pytorch.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "a": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 2.8284271247461903}, "turbo_broccoli.pandas": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 3.1622776601683795}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}}, "df": 8}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.7320508075688772}}, "df": 1, "r": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"turbo_broccoli": {"tf": 2.449489742783178}, "turbo_broccoli.numpy.to_json": {"tf": 2}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 2}}, "df": 4}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 2}}, "df": 1}}}}, "d": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 1}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.pytorch": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pytorch.to_json": {"tf": 1}}, "df": 4}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"3": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}}, "df": 12}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}}, "df": 6}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 2, "r": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}}, "df": 1}, "d": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 2.6457513110645907}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli": {"tf": 2}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.keras.to_json": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.bytes": {"tf": 1}, "turbo_broccoli.keras": {"tf": 1}, "turbo_broccoli.numpy": {"tf": 1}, "turbo_broccoli.pandas": {"tf": 1}, "turbo_broccoli.pytorch": {"tf": 1}, "turbo_broccoli.tensorflow": {"tf": 1}, "turbo_broccoli.utils": {"tf": 1}}, "df": 7}}}}}}}, "f": {"docs": {"turbo_broccoli.environment.set_shared_key": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"4": {"docs": {"turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.4142135623730951}}, "df": 4}, "docs": {}, "df": 0}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 9.055385138137417}}, "df": 1}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "u": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 2}}, "df": 3, "s": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli": {"tf": 3.1622776601683795}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 12}}}, "s": {"docs": {"turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"turbo_broccoli": {"tf": 3.605551275463989}, "turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.from_json": {"tf": 1}, "turbo_broccoli.environment": {"tf": 1}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1.4142135623730951}}, "df": 29, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}}, "m": {"docs": {"turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 2.449489742783178}, "turbo_broccoli.environment.set_keras_format": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.pandas.to_json": {"tf": 2}}, "df": 4, "s": {"docs": {"turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 1, "s": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}}, "c": {"4": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}}, "docs": {"turbo_broccoli": {"tf": 3.1622776601683795}}, "df": 1, "l": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 3}}, "df": 1}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 2.23606797749979}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "l": {"1": {"docs": {"turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}}, "df": 2, "s": {"docs": {"turbo_broccoli": {"tf": 2}, "turbo_broccoli.collections": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 2.23606797749979}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 5}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 2, "s": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.secret.LockedSecret": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}, "d": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {"turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli.turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 4}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 7}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 2.23606797749979}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 2.23606797749979}}, "df": 2}, "s": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.generic.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 8}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.generic": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 2.23606797749979}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 4}}, "s": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1, "d": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"turbo_broccoli": {"tf": 2.23606797749979}}, "df": 1}, "e": {"docs": {"turbo_broccoli": {"tf": 3}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.keras.to_json": {"tf": 2.23606797749979}}, "df": 2, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.secret.LockedSecret": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1.4142135623730951}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 4, "s": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.utils": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.utils.warn_about_safetensors": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 13}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 4}, "x": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.numpy.to_json": {"tf": 2.23606797749979}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.7320508075688772}}, "df": 4, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.collections.to_json": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 2.23606797749979}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.environment": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.turbo_broccoli": {"tf": 1}}, "df": 1}}}}, "v": {"2": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 2.449489742783178}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 2}, "turbo_broccoli.pandas.to_json": {"tf": 2.23606797749979}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 2.23606797749979}}, "df": 9}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.LockedSecret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {"turbo_broccoli": {"tf": 2}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.environment.set_keras_format": {"tf": 1}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.environment": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.7320508075688772}}, "df": 11, "s": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.environment": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.utils": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.keras.to_json": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {"turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 2, "s": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 3}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 11}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 3}, "turbo_broccoli.pandas.to_json": {"tf": 2.449489742783178}, "turbo_broccoli.tensorflow.to_json": {"tf": 2.23606797749979}}, "df": 7}, "e": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 1}}}, "h": {"5": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.environment.set_keras_format": {"tf": 1}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.keras.to_json": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 10}, "v": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.keras.to_json": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.numpy": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "f": {"5": {"docs": {"turbo_broccoli.pandas.to_json": {"tf": 1}}, "df": 1}, "docs": {"turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 2.23606797749979}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli": {"tf": 2.449489742783178}, "turbo_broccoli.dataclass.from_json": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}}, "df": 3}}, "s": {"docs": {"turbo_broccoli.environment.register_dataclass_type": {"tf": 1}, "turbo_broccoli.environment.register_pytorch_module_type": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.environment": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder": {"tf": 1}}, "df": 9}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 1, "d": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli.secret.LockedSecret": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.secret.to_json": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 2}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.4142135623730951}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli.numpy.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.encode": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 2}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 4}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {"turbo_broccoli.secret.LockedSecret": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 2.449489742783178}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"turbo_broccoli.secret.LockedSecret": {"tf": 1}}, "df": 1}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "c": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}, "turbo_broccoli.generic": {"tf": 1.4142135623730951}, "turbo_broccoli.generic.to_json": {"tf": 1}, "turbo_broccoli.numpy": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {"turbo_broccoli": {"tf": 2.23606797749979}, "turbo_broccoli.secret.LockedSecret": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.bytes.to_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy.to_json": {"tf": 2.8284271247461903}, "turbo_broccoli.pandas.to_json": {"tf": 2.449489742783178}, "turbo_broccoli.tensorflow.to_json": {"tf": 2.23606797749979}}, "df": 7}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 13}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}, "turbo_broccoli.numpy": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}}, "df": 4}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.collections.to_json": {"tf": 1}, "turbo_broccoli.dataclass.to_json": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.pytorch.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1.7320508075688772}}, "df": 7}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli": {"tf": 3.3166247903554}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1.7320508075688772}, "turbo_broccoli.pandas.to_json": {"tf": 1.4142135623730951}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 2.8284271247461903}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 6}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"turbo_broccoli": {"tf": 2}, "turbo_broccoli.numpy.to_json": {"tf": 1}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.secret.to_json": {"tf": 1}, "turbo_broccoli.tensorflow.to_json": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliDecoder.__init__": {"tf": 2.6457513110645907}}, "df": 6, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli": {"tf": 2.23606797749979}, "turbo_broccoli.pandas.to_json": {"tf": 1}, "turbo_broccoli.utils.warn_about_safetensors": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}, "s": {"docs": {"turbo_broccoli.secret.LockedSecret": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"turbo_broccoli": {"tf": 1.4142135623730951}}, "df": 1}, "r": {"docs": {"turbo_broccoli.secret.Secret": {"tf": 1}, "turbo_broccoli.secret.SecretDict": {"tf": 1}, "turbo_broccoli.secret.SecretFloat": {"tf": 1}, "turbo_broccoli.secret.SecretInt": {"tf": 1}, "turbo_broccoli.secret.SecretList": {"tf": 1}, "turbo_broccoli.secret.SecretStr": {"tf": 1}}, "df": 6}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"turbo_broccoli": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.keras.to_json": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "x": {"docs": {"turbo_broccoli": {"tf": 2.6457513110645907}}, "df": 1, "m": {"docs": {}, "df": 0, "l": {"docs": {"turbo_broccoli.environment.set_pandas_format": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"turbo_broccoli": {"tf": 3.7416573867739413}, "turbo_broccoli.keras": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1.4142135623730951}, "turbo_broccoli.keras.to_json": {"tf": 3}}, "df": 4}}}, "y": {"docs": {"turbo_broccoli": {"tf": 3.605551275463989}, "turbo_broccoli.bytes.from_json": {"tf": 1}, "turbo_broccoli.collections.from_json": {"tf": 1}, "turbo_broccoli.environment.set_shared_key": {"tf": 1}, "turbo_broccoli.keras.from_json": {"tf": 1}, "turbo_broccoli.numpy.from_json": {"tf": 1}, "turbo_broccoli.pandas.from_json": {"tf": 1}, "turbo_broccoli.pytorch.from_json": {"tf": 1}, "turbo_broccoli.secret.LockedSecret": {"tf": 1}, "turbo_broccoli.secret.from_json": {"tf": 1}, "turbo_broccoli.tensorflow.from_json": {"tf": 1}}, "df": 11}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"turbo_broccoli": {"tf": 1}, "turbo_broccoli.turbo_broccoli.TurboBroccoliEncoder.default": {"tf": 1}}, "df": 2, "r": {"docs": {"turbo_broccoli": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();